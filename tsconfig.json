{
  "compilerOptions": {
    /* Basic Options */
    "target": "esnext", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [
      "esnext",
      "dom"
    ], /* Specify library files to be included in the compilation. */
    "outDir": "./dist", /* Redirect output structure to the directory. */
    /* Strict Type-Checking Options */
    "strict": true, /* Enable all strict type-checking options. */
    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./", /* Base directory to resolve non-absolute module names. */
    "paths": {
      "@src/*": [
        "src/*"
      ],
      "@test/*": [
        "test/*"
      ]
    }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    "typeRoots": [
      "types",
      "node_modules/@types"
    ], /* List of folders to include type definitions from. */
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
    "plugins": [
      {
        "name": "typescript-tslint-plugin"
      }
    ]
  },
  "include": [".github/actions/**/*.ts", "**/*.ts"],
  "exclude": [
    "node_modules",
    "dist"
  ]
}